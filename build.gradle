plugins {
    id "maven-publish"
    id "fabric-loom" version "1.1-SNAPSHOT"
    id "io.freefair.lombok" version "8.0.1"
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

version = "${project.minecraft_version}-${project.mod_version}"
group = project.maven_group

repositories {
    maven {
        url "https://maven.toastmc.dev/snapshots"
    }
    maven {
        url 'https://jitpack.io'
    }
    mavenCentral()
}

dependencies {
    /* @see the gradle.properties file */
    minecraft("com.mojang:minecraft:${project.minecraft_version}")
    mappings("net.fabricmc:yarn:${project.yarn_mappings}:v2")
    modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")
    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")

    // Jackson JSON
    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.0-rc2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.1'
    shadow('com.fasterxml.jackson.core:jackson-core:2.15.0-rc2')
    shadow('com.fasterxml.jackson.core:jackson-annotations:2.15.1')
    shadow('com.fasterxml.jackson.core:jackson-databind:2.15.1')

    // Baritone
    modImplementation 'baritone:fabric:1.19.4-beta.6:unoptimized'
    include 'baritone:fabric:1.19.4-beta.6:unoptimized'

    // Baritone Plus
    implementation 'com.theokanning.openai-gpt3-java:service:0.12.0'
    implementation 'org.reflections:reflections:0.10.2'
    implementation 'com.github.umjammer:jlayer:1.0.2'
    shadow('com.theokanning.openai-gpt3-java:service:0.12.0')
    shadow('org.reflections:reflections:0.10.2')
    shadow('com.github.umjammer:jlayer:1.0.2')
}

shadowJar {
    configurations = [project.configurations.shadow]
    archivesBaseName = project.archives_base_name
}

remapJar {
    dependsOn(":shadowJar")
    input.set(shadowJar.archiveFile)
}

processResources {
    inputs.property "version", project.mod_version

    filesMatching("fabric.mod.json") {
        duplicatesStrategy DuplicatesStrategy.EXCLUDE
        expand "version": project.mod_version
    }

    from(sourceSets.main.resources.srcDirs) {
        duplicatesStrategy DuplicatesStrategy.EXCLUDE
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.incremental = true
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// TODO FIX - System.getenv not working? ¯\_(ツ)_/¯
publishing {
    publications {
        mavenJava(MavenPublication) {
            // (Baritone+) is not a valid Maven identifier ([A-Za-z0-9_\-.]+)
            artifactId = project.name.replace("+", "Plus")
            artifact(shadowJar) {
                builtBy shadowJar
            }
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
        maven {
            name = "toast-maven"
            url = System.getenv("MAVEN_URL")

            credentials {
                username = System.getenv("MAVEN_NAME")
                password = System.getenv("MAVEN_TOKEN")
            }

            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}
